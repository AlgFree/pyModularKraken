Keychain:
	Gg.:
		Netzwerk mit Teilnehmern A,B,C.
		A:
			A.priv
			B.pub
			C.pub
		B:
			B.priv
			A.pub
			C.pub
		C:
			C.priv
			A.pub
			B.pub

	Gewünscht:
		Erweiterung um Teilnehmer D.
		Befehl zum Hinzufügen eines Teilnehmers geht über Conmanager.
		Vorgeschlagene Befehle:
			KeychainAdd <--- Nur Admin sollte hinzufügen dürfen!
			KeychainQuery
			KeychainRemove <--- Nur Admin sollte Informationen anderer Teilnehmer bearbeiten können!


Conmanager:
    "standardport" am besten doch nicht 42069 ?

    Paketindizierung und genauere Informationen bei Fehlermeldungen wie "No socket connected towards destination"
    	---> Aktionstyp "senddata" für unindizierte Pakete. Zum Beispiel für 1-Way Pakete wie Statusmeldungen.
    	---> Aktionstyp "senddataI" für indizierte Pakete. Index wird mit übermittelt.
    		---> Wie wär's mit einer .respond() Funktion für Pakete?
    			Man bräuchte nicht mehr den ganzen Kram mit orig_device und orig_module angeben.
    			Pakete zu empfangen wäre dadurch viel einfacher.

    Schlüsselsignierung einbauen! Beispiel für Angriff: Jemand nutzt den öffentlichen Schlüssel von jemand anderem, um
        in seinem Namen ein Paket zu verschicken.
        Es könnte schlimmstenfalls eine Remote code execution oder ein network takeover passieren,
        Botnet Software ausgeführt werden, Daten gelöscht werden, usw..
        Ist also sicherheitstechnisch von HÖCHSTER relevanz, sobald / bevor wir das Repository öffentlich schalten!
    
